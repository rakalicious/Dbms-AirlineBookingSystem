 public void start(Stage stage) {

        VBox root = new VBox();

        TableView<Student> studentsTable = new TableView<Student>();

        HBox studentBox = new HBox();
        Label studentHeader = new Label("Student: ");
        Label studentInfo = new Label("");
        studentBox.getChildren().addAll(studentHeader, studentInfo);

        root.getChildren().addAll(studentsTable, studentBox);

        // Prepare the columns
        TableColumn<Student, String> firstNameCol = new TableColumn<Student, String>(
                "First name");
        firstNameCol.setCellValueFactory(cellData -> cellData.getValue()
                .firstNameProperty());

        TableColumn<Student, String> lastNameCol = new TableColumn<Student, String>(
                "Last name");
        lastNameCol.setCellValueFactory(cellData -> cellData.getValue()
                .lastNameProperty());

        studentsTable.getSelectionModel().selectedItemProperty()
                .addListener(new ChangeListener<Student>() {

                    // Here's the key part. See how I specify that the
                    // parameters are of type student. Now you can use the
                    // instance methods from Student.
                    @Override
                    public void changed(
                            ObservableValue<? extends Student> observable,
                            Student oldValue, Student newValue ) {

                        studentInfo.setText(newValue.getFirstName() + " "
                                + newValue.getLastName());
                        // If you want to get the value of a selected student cell at
                        // anytime, even if it hasn't changed. Just do e.g.
                        // studentsTable.getSelectionModel().getSelectedItem().getFirstName()
                    }
                });

        studentsTable.getColumns().setAll(firstNameCol, lastNameCol);

        // Some mock Student objects
        Student student1 = new Student("Eric", "Smith");
        Student student2 = new Student("Brad", "Jones");
        Student student3 = new Student("Logan", "Thorpe");

        // Fill the table with students.
        studentsTable.getItems().addAll(student1, student2, student3);

        Scene scene = new Scene(root);
        stage.setScene(scene);
        stage.show();
    }